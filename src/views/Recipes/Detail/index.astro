---
// src/views/Recipes/Detail/index.astro
import { t } from '../../../i18n/i18n';
import type { Locale } from '../../../i18n/i18n';
import './styles.css';
import { initRecipeDetailScripts } from './scripts.js';
import { time } from 'console';

interface RecipeItem {
  id: string;
  title: string;
  description: string;
  ingredients: string[];
  instructions: string;
  preparation_time: number;
  servings: number;
  image?: string;
  tags?: string[];
}

const { currentLang, recipeId } = Astro.props;

// Obtener datos desde traducciones
const recipesAssets = t('home', { namespace: 'recipes', locale: currentLang }) || {};
const recipes = t('items', { namespace: 'recipes', locale: currentLang as Locale }) || [];
const recipe = recipes.find((item: RecipeItem) => item.id === recipeId);

// Obtener recetas relacionadas
const relatedRecipes = recipes
  .filter((item: RecipeItem) => item.id !== recipeId)
  .slice(0, 3);

if (!recipe) {
  throw new Error(`Recipe with id ${recipeId} not found`);
}

function formatTime(minutes: number, locale: Locale): string {
  const hours = Math.floor(minutes / 60);
  const mins = minutes % 60;
  
  if (locale === 'es') {
    return hours > 0 
      ? `${hours}h ${mins}min` 
      : `${mins}min`;
  } else {
    return hours > 0 
      ? `${hours}h ${mins}m` 
      : `${mins}m`;
  }
}
---
<div id="hero" class="flex flex-col pt-8 md:pt-12 md:flex-row justify-center items-center md:h-[43rem] pb-8">
  <div class="w-full max-w-6xl flex flex-col md:flex-row items-center justify-center gap-8">
    {recipe.image && (
      <div class="w-full md:w-1/2 flex justify-center">
        <div class="relative rounded-lg overflow-hidden h-80 lg:h-96 w-80 max-w-lg">
          <img 
            src={recipe.image} 
            alt={recipe.title}
            class="w-full h-full object-cover"
            onerror="this.onerror=null;this.src='/images/recipes/placeholder.jpg';"
          />
        </div>
      </div>
    )}
    
    <div class="w-[80%] md:w-1/2 flex flex-col gap-4 bg-white md:p-8 p-4 rounded-lg">
      <h1 class=" font-heading md:text-3xl text-2xl font-bold text-gray-800 mb-2 text-center md:text-left">{recipe.title}</h1>
      <div class="flex items-center justify-center md:justify-start">
        <svg 
          xmlns="http://www.w3.org/2000/svg" 
          class="h-5 w-5 md:h-6 md:w-6 text-gray-500" 
          fill="none" 
          viewBox="0 0 24 24" 
          stroke="currentColor"
        >
          <path 
            stroke-linecap="round" 
            stroke-linejoin="round" 
            stroke-width="2" 
            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" 
          />
        </svg>
        <span class="ml-2 md:ml-5 text-gray-500 font-heading text-base md:text-xl">
          {recipe.preparation_time} MINS
        </span>
      </div>
    </div>
  </div>
</div>
<div id="ingredients" class="pt-8 md:pt-0 flex flex-col md:flex-row justify-center items-center md:h-[43rem] mb-8">
  <h1 class="font-heading font-bold md:text-4xl text-2xl text-white text-center md:text-left">{recipesAssets.recipes}</h1>
  <div class="w-full mt-8 md:mt-0 md:max-w-6xl flex flex-col md:flex-row items-center justify-center gap-8">
    
    {recipe.image && (
      <div class="w-full md:w-1/2 flex justify-center">
        <div class="relative rounded-lg overflow-hidden h-80 lg:h-96 w-80 max-w-lg">
          <img 
            src={recipe.image} 
            alt={recipe.title}
            class="w-full h-full object-cover"
            onerror="this.onerror=null;this.src='/images/recipes/placeholder.jpg';"
          />
        </div>
      </div>
    )}
    
    <div class="w-[80%] md:w-1/2 flex flex-col gap-4  md:p-8 p-4 rounded-lg text-white">
      <section class="mb-8 text-white">
        <ul class="list-disc list-inside space-y-2 text-white">
          {recipe.ingredients.map((ingredient: string) => (
            <li class="text-white">
              {ingredient}
            </li>
          ))}
        </ul>
      </section>
    </div>
  </div>
</div>

<div id="instructions" class="flex flex-col md:flex-row justify-center items-center md:h-[43rem] mb-8">

  <div class="w-full max-w-6xl flex flex-col md:flex-row items-center justify-center gap-8">
    <div class="w-[80%]  flex items-center justify-center flex-col gap-4  md:p-8 p-4 rounded-lg text-white">
      <h1 class="font-heading font-bold md:text-4xl text-2xl text-black text-center md:text-left">{recipesAssets.preparation}</h1>
      <section class="mb-8 text-white">
        <ul class="list-disc list-inside space-y-2 text-gray-800">
          {recipe.instructions.map((instruction: string) => (
            <li class="text-gray-800">
              {instruction}
            </li>
          ))}
        </ul>
      </section>
    </div>
  </div>
</div>
<div id="suggestions_releated" class="flex flex-col md:flex-row justify-center items-center md:h-[43rem] mb-8">

</div>


<script>
  // Este script se ejecuta solo en el navegador
  document.addEventListener('DOMContentLoaded', () => {
    // Manejo de imÃ¡genes que fallan al cargar
    document.querySelectorAll('.recipe-detail img').forEach(img => {
      if (!img.hasAttribute('onerror')) {
        img.addEventListener('error', function(this: HTMLImageElement) {
          this.onerror = null;
          this.src = '/images/recipes/placeholder.jpg';
        });
      }
    });
  });
</script>
