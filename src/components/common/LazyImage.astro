---
import { getOptimalSizes, shouldPrioritize } from '../../utils/imageUtils';

interface Props {
  src?: string;
  alt: string;
  width?: string | number;
  height?: string | number;
  class?: string;
  color?: string;
  priority?: boolean;
  sizes?: string;
  context?: string;
  decorative?: boolean;
  [key: string]: any;
}

const { 
  src, 
  alt, 
  width, 
  height, 
  class: className, 
  color, 
  context = 'default',
  priority: explicitPriority,
  sizes: explicitSizes,
  decorative = false,
  ...rest 
} = Astro.props;

// Si no hay src, no renderizar nada
if (!src) return null;

// Optimizar el texto alternativo
let optimizedAlt = alt;

// Si la imagen es decorativa, usar alt vacío
if (decorative) {
  optimizedAlt = '';
} else if (alt) {
  optimizedAlt = alt
    .replace(/^imagen de\s+/i, '')
    .replace(/^foto de\s+/i, '')
    .replace(/^icono de\s+/i, '')
    .replace(/^imagen\s+/i, '')
    .replace(/^foto\s+/i, '')
    .replace(/^icono\s+/i, '');
}

// Determinar prioridad
const priority = explicitPriority !== undefined ? explicitPriority : shouldPrioritize(src, context);

// Obtener tamaños óptimos
const sizes = explicitSizes || getOptimalSizes(context);

// Determinar si es una imagen WebP
const isWebP = src.toLowerCase().endsWith('.webp');

// Función para calcular la rotación de matiz según el color
function getHueRotate(color: string) {
  // Valores aproximados para colores comunes
  const hueValues: Record<string, string> = {
    'red': '0deg',
    'orange': '35deg',
    'yellow': '60deg',
    'green': '120deg',
    'blue': '240deg',
    'purple': '270deg',
    'pink': '330deg',
    'white': '0deg',
    'black': '0deg',
  };
  
  return hueValues[color.toLowerCase()] || '0deg';
}

// Generar srcset para imágenes responsivas
const isExternal = src.startsWith('http');
let srcset = '';

if (isWebP) {
  if (isExternal && src.includes('assets.doguiygatibienestar.com')) {
    srcset = [
      `${src}?w=640 640w`,
      `${src}?w=768 768w`,
      `${src}?w=1024 1024w`,
      `${src}?w=1280 1280w`
    ].join(', ');
  } else if (!isExternal) {
    const baseUrl = src.substring(0, src.lastIndexOf('.webp'));
    srcset = [
      `${baseUrl}-640w.webp 640w`,
      `${baseUrl}-768w.webp 768w`,
      `${baseUrl}-1024w.webp 1024w`,
      `${baseUrl}-1280w.webp 1280w`
    ].join(', ');
  }
}
---

<img 
  src={src} 
  alt={optimizedAlt}
  class={className}
  style={{
    ...(color === 'white' ? { filter: 'brightness(0) invert(1)' } : 
        color === 'black' ? { filter: 'brightness(0) invert(0)' } : 
        color ? { filter: `brightness(0) saturate(100%) invert(${color === 'white' ? 1 : 0}) sepia(0) saturate(${color !== 'white' && color !== 'black' ? '7500%' : '100%'}) hue-rotate(${getHueRotate(color)})` } : {})
  }}
  {...(decorative ? { 'aria-hidden': 'true', 'role': 'presentation' } : {})}
  loading={priority ? null : "lazy"}
  decoding="async"
  fetchpriority={priority ? "high" : "auto"}
  width={width}
  height={height}
  {...(srcset ? { srcset, sizes } : {})}
  {...rest}
/>
