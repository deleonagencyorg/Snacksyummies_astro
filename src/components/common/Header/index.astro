---
// src/components/common/Header/index.astro
import { t, type Locale } from '../../../i18n/i18n';
import { logos } from '../../../config/assets';
import LocalizedImage from '../LazyImage.astro';
import LanguageSwitcher from '../../i18n/LanguageSwitcher.astro';
import './styles.css';

export interface Props {
  currentLang: Locale;
}
const { currentLang } = Astro.props;

// Obtener los datos de social media (url y alt) desde los archivos de traducción
const socialMedia = t('social_media', { namespace: 'common', locale: currentLang });

interface MenuItem {
  id: string;
  text: string;
  href: string;
  submenu?: MenuItem[];
}

const itemsFromT = t('menu_items', { namespace: 'common', locale: currentLang });
const menuItems: MenuItem[] = Array.isArray(itemsFromT) ? itemsFromT : [];
const openMenuLabel: string = t('menu_labels.open_main_menu', { namespace: 'common', locale: currentLang }) || 'Open main menu';

const menuIconSvg = `
  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16m-7 6h7"></path>
  </svg>
`;
const closeIconSvg = `
  <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
  </svg>
`;
---

<header id="site-header" class="fixed top-0 left-0 w-full z-40 transition-colors duration-300 bg-transparent text-white py-3 px-4 sm:px-6 lg:px-8 font-sans">
  <div class="container mx-auto flex items-center justify-between h-16">
    
    <!-- Logo para Desktop (Izquierda) -->
    <div class="hidden md:flex items-center flex-shrink-0">
      <a href={`/${currentLang}/`} class="block">
        <img src={logos.principal.url} alt={logos.principal.alt || 'Taqueritos Logo'} class="h-10 lg:h-12 w-auto" />
      </a>
    </div>

    <!-- Menú Hamburguesa (Izquierda en Móvil) -->
    <div class="md:hidden flex items-center">
      <button id="mobile-menu-button" type="button" class="p-2 rounded-md text-white hover:text-gray-300 focus:outline-none" aria-controls="mobile-menu" aria-expanded="false">
        <span class="sr-only">{openMenuLabel}</span>
        <div id="menu-icon-container" set:html={menuIconSvg} />
      </button>
    </div>

    <!-- Logo para Móvil (Centro) -->
    <div class="md:hidden flex justify-center flex-1">
      <a href={`/${currentLang}/`} class="block">
        <img src={logos.principal.url} alt={logos.principal.alt || 'Taqueritos Logo'} class="h-8 w-auto" />
      </a>
    </div>

    <!-- Menú de Navegación (Centro en Desktop) -->
    <nav class="hidden md:flex flex-1 items-center justify-center">
      <ul class="flex space-x-8">
        {menuItems.map((item) => (
          <li>
            <a href={`/${currentLang}${item.href}`} class="text-white hover:text-yellow-300 transition-colors duration-200 nav-link">
              {item.text}
            </a>
          </li>
        ))}
      </ul>
    </nav>

    <!-- Selector de Idioma (Derecha) -->
    <div class="flex items-center">
      <LanguageSwitcher currentLang={currentLang} />
    </div>
  </div>

  <!-- Menú Móvil (Pantalla Completa) -->
  <div id="mobile-menu" class="hidden fixed inset-0 z-50 bg-black bg-opacity-95 text-white pt-16 md:pt-20 font-sans">
    <!-- Botón de cierre visible en la esquina superior derecha -->
    <button id="mobile-menu-close" type="button" class="absolute top-4 right-4 p-2 rounded-md text-white hover:text-gray-300 focus:outline-none">
      <span class="sr-only">Cerrar menú</span>
      <div set:html={closeIconSvg} />
    </button>
    
    <div class="container mx-auto px-4 py-8 flex flex-col h-full">
      <!-- Enlaces de Navegación -->
      <nav class="mb-8">
        <ul class="space-y-6">
          {menuItems.map((item) => (
            <li>
              <a 
                href={`/${currentLang}${item.href}`} 
                class="text-xl sm:text-2xl font-bold text-white hover:text-yellow-300 transition-colors duration-200 block"
              >
                {item.text}
              </a>
            </li>
          ))}
        </ul>
      </nav>
      
      <!-- Redes Sociales -->
      <div class="mt-auto">
        <h3 class="text-lg font-bold mb-4">Síguenos</h3>
        <div class="flex space-x-4">
          {socialMedia && Array.isArray(socialMedia) && socialMedia.map((sm) => {
            return (
              <a 
                href={sm.url} 
                target="_blank" 
                rel="noopener noreferrer" 
                class="text-white hover:text-yellow-300 transition-colors duration-200"
                aria-label={sm.name}
              >
                <span class="sr-only">{sm.name}</span>
                {sm.iconUrl && (
                  <LocalizedImage
                    src={sm.iconUrl}
                    alt={sm.alt || sm.name}
                    class="h-6 w-6 filter invert"
                    width={24}
                    height={24}
                    loading="lazy"
                  />
                )}
              </a>
            );
          })}
        </div>
      </div>
    </div>
  </div>
</header>

<script src="./scripts.js"></script>
