---
// Breadcrumb.astro - Component for showing navigation breadcrumbs
import { t, getLocale } from '../../../i18n/i18n';
import type { Locale } from '../../../i18n/i18n';
import './styles.css';

// Props for the component
interface BreadcrumbItem {
  label: string;
  href: string;
}

interface Props {
  items: BreadcrumbItem[];
  bgColor?: string;
  textColor?: string;
}

const { items, bgColor, textColor = 'text-white' } = Astro.props;

// Convert Tailwind classes to actual colors for inline styles
let backgroundColor = 'transparent';
if (bgColor === 'bg-primary') backgroundColor = 'var(--color-primary)';
else if (bgColor === 'bg-secondary') backgroundColor = 'var(--color-secondary)';
else if (bgColor === 'bg-white') backgroundColor = 'white';
else if (bgColor === 'bg-gray-100') backgroundColor = '#f3f4f6';

// Convert text color classes to actual colors
let textColorValue = '#FFFFFF'; // Default white
if (textColor === 'text-white') textColorValue = 'white';
else if (textColor === 'text-gray-600') textColorValue = '#4b5563';
else if (textColor === 'text-gray-500') textColorValue = '#6b7280';

---

<nav class="breadcrumb-container pt-8 mt-[2rem]" style={`background-color: ${backgroundColor};`} aria-label="Breadcrumb">
  <div class="breadcrumb-wrapper">
    <ol class="breadcrumb-list">
      {items.map((item, index) => (
        <li class="breadcrumb-item" style={`color: ${textColorValue};`}>
          {index > 0 && <span class="breadcrumb-separator" aria-hidden="true">/</span>}
          <a 
            href={item.href} 
            class={`breadcrumb-link ${index === items.length - 1 ? 'current' : ''}`}
            style={`color: ${textColorValue};`}
            aria-current={index === items.length - 1 ? 'page' : undefined}
          >
            {index === 0 ? (
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="breadcrumb-home-icon">
                <path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path>
                <polyline points="9 22 9 12 15 12 15 22"></polyline>
              </svg>
            ) : (
              item.label.toUpperCase()
            )}
          </a>
        </li>
      ))}
    </ol>
  </div>
</nav>

<script src="./script.js"></script>
