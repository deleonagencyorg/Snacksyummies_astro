---
// src/pages/[lang]/recipes/[recipeId].astro (SSR)
import { setLocale, type Locale } from '../../../i18n/i18n';
import MainLayout from '../../../layouts/MainLayout.astro';
import RecipeDetail from '../../../views/Recipes/Detail/index.astro';

export const prerender = false; // SSR to allow redirect when recipe is missing in current language

const { lang, recipeId } = Astro.params;
setLocale(lang as Locale);

function slugify(str: string): string {
  return String(str || '')
    .toLowerCase()
    .normalize('NFD')
    .replace(/[\u0300-\u036f]/g, '')
    .replace(/[^a-z0-9]+/g, '-')
    .replace(/^-+|-+$/g, '');
}

// Load recipes for current language
const modules = import.meta.glob<{ default: any }>('../../../locales/*/recipes/*.json');
const all: any[] = [];
for (const p in modules) {
  const mod = await modules[p]();
  const rec = mod.default || {};
  const recLang = p.split('/')[4];
  if (recLang === lang) all.push(rec);
}

const exists = all.some((r) => r.id === recipeId || r.slug === recipeId || slugify(r.title || '') === recipeId);
if (!exists) {
  const listing = `/${lang}/${lang === 'es' ? 'recetas' : 'recipes'}`;
  return Astro.redirect(listing);
}
---

<MainLayout title={''}>
  <RecipeDetail currentLang={lang} recipeId={recipeId} />
</MainLayout>
