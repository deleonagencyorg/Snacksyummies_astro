import { c as createComponent, a as createAstro, m as maybeRenderHead, b as addAttribute, f as renderComponent, e as renderTransition, d as renderTemplate, r as renderScript } from './astro/server_XONErzoU.mjs';
import 'kleur/colors';
import { g as getLocale, t } from './i18n_N2D6iQyo.mjs';
/* empty css                              */
import { $ as $$LazyImage } from './MainLayout_C_bIfuhT.mjs';
/* empty css                            */

const $$Astro$1 = createAstro();
const $$RecipeCard = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro$1, $$props, $$slots);
  Astro2.self = $$RecipeCard;
  const {
    image,
    title,
    time = "---",
    id,
    textColor = "text-blue-900",
    iconColor = "text-blue-900",
    hoverImage = image,
    difficulty = "---",
    servings = 0,
    rating = 0
  } = Astro2.props;
  const currentLocale = getLocale();
  const recipeLink = `/${currentLocale}/${currentLocale === "es" ? "recetas" : "recipes"}/${id}`;
  const viewRecipeText = currentLocale === "es" ? "Ver Receta" : "View Recipe";
  return renderTemplate`${maybeRenderHead()}<a${addAttribute(recipeLink, "href")} class="block group relative overflow-hidden rounded-[2rem] transition-all duration-300 ease-in-out h-[350px] md:h-[450px] hover:scale-[1.02] hover:shadow-[0_0_20px_rgba(255,255,255,0.5)]"${addAttribute(renderTransition($$result, "auiw5euj", "fade", ""), "data-astro-transition-scope")}> <!-- Imagen de fondo (siempre visible) --> <div class="absolute inset-0 w-full h-full"> ${renderComponent($$result, "LazyImage", $$LazyImage, { "src": image, "alt": title, "class": "w-full h-full object-cover", "data-astro-transition-scope": renderTransition($$result, "efgygxyl", "", `recipe-image-${id}`) })} </div> <!-- Overlay con gradiente para el estado normal --> <div class="absolute inset-0 bg-gradient-to-t from-black to-transparent opacity-100 group-hover:opacity-0 transition-opacity duration-300"></div> <!-- Información en estado normal --> <div class="absolute bottom-0 left-0 right-0 p-4 bg-white bg-opacity-90 group-hover:opacity-0 transition-opacity duration-300"> <h3 class="font-sans text-lg font-bold text-primary text-left mb-3">${title}</h3> <div class="flex justify-center"> <div class="border-2 border-primary bg-white text-primary py-2 px-8 rounded-full text-center text-sm font-medium"> ${viewRecipeText} </div> </div> </div> <!-- Overlay para hover --> <div class="absolute inset-0 bg-gradient-to-t from-blue-900 to-blue-900/50 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div> <!-- Información en hover --> <div class="absolute inset-0 flex flex-col justify-end opacity-0 group-hover:opacity-100 transition-opacity duration-300"> <!-- Toda la información en la parte inferior --> <div class="p-5 flex flex-col gap-3"> <!-- Título en hover (al inicio de la información) --> <h3 class="font-sans text-lg font-bold text-white text-left mb-3">${title}</h3> <!-- Datos de la receta --> <!-- Estrellas de valoración --> ${rating > 0 && renderTemplate`<div class="flex items-center"> ${Array.from({ length: 5 }).map((_, i) => renderTemplate`<svg xmlns="http://www.w3.org/2000/svg"${addAttribute(`h-5 w-5 ${i < rating ? "text-yellow-400" : "text-gray-400"}`, "class")} viewBox="0 0 20 20" fill="currentColor"> <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path> </svg>`)} </div>`} <!-- Datos de la receta --> <div class="grid grid-cols-2 gap-2 text-white"> <!-- Tiempo --> <div class="flex items-center"> <svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> <span class="ml-2 text-sm">${time}</span> </div> <!-- Porciones --> <div class="flex items-center"> <svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z"></path> </svg> <span class="ml-2 text-sm">${servings > 0 ? `${servings} ${currentLocale === "es" ? "Personas" : "Servings"}` : "---"}</span> </div> <!-- Dificultad --> <div class="flex items-center"> <svg class="h-5 w-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path> </svg> <span class="ml-2 text-sm">${difficulty}</span> </div> </div> <!-- Botón Ver Receta --> <div class="mt-3 flex justify-center"> <div class="border-2 border-primary bg-white text-primary py-2 px-8 rounded-full text-center text-sm font-medium hover:shadow-md"> ${viewRecipeText} </div> </div> </div> </div> </a>`;
}, "/Users/josedeleon/Proyectos/Snacksyummies_astro/src/components/recipes/RecipeCard.astro", "self");

const $$Astro = createAstro();
const $$Index = createComponent(($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  const { currentLang, recipeId } = Astro2.props;
  const recipesAssets = t("home", { namespace: "recipes", locale: currentLang }) || {};
  const recipes = t("items", { namespace: "recipes", locale: currentLang }) || [];
  const recipe = recipes.find((item) => item.id === recipeId);
  const relatedRecipes = recipes.filter((item) => item.id !== recipeId).slice(0, 3);
  if (!recipe) {
    throw new Error(`Recipe with id ${recipeId} not found`);
  }
  return renderTemplate`${maybeRenderHead()}<div id="hero" class="flex flex-col pt-8 md:pt-12 md:flex-row justify-center items-center md:h-[43rem] pb-8"${addAttribute(renderTransition($$result, "e3yltuu7", "slide", ""), "data-astro-transition-scope")}> <div class="w-full max-w-6xl flex flex-col md:flex-row items-center justify-center gap-8"> ${recipe.image && renderTemplate`<div class="w-full md:w-1/2 flex justify-center"> <div class="relative rounded-lg overflow-hidden h-80 lg:h-96 w-80 max-w-lg"> <img${addAttribute(recipe.image, "src")}${addAttribute(recipe.title, "alt")} class="w-full h-full object-cover" onerror="this.onerror=null;this.src='/images/recipes/placeholder.jpg';"${addAttribute(renderTransition($$result, "pxo4wmar", "", `recipe-image-${recipe.id}`), "data-astro-transition-scope")}> </div> </div>`} <div class="w-[80%] md:w-1/2 flex flex-col gap-4 bg-white md:p-8 p-4 rounded-lg"> <h1 class=" font-heading md:text-3xl text-2xl font-bold text-gray-800 mb-2 text-center md:text-left">${recipe.title}</h1> <div class="flex items-center justify-center md:justify-start"> <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 md:h-6 md:w-6 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"></path> </svg> <span class="ml-2 md:ml-5 text-gray-500 font-heading text-base md:text-xl"> ${recipe.preparation_time} MINS
</span> </div> </div> </div> </div> <div id="ingredients" class=" flex flex-col justify-center items-center    mb-8 py-16 "> <div class="w-full max-w-6xl px-4"> <h1 class="font-heading font-bold md:text-4xl text-2xl text-white text-center mb-8 "> ${recipesAssets.recipes} </h1> <div class="flex flex-col md:flex-row items-center justify-center gap-8"> ${recipe.image && renderTemplate`<div class="w-full md:w-1/2 flex justify-center"> <div class="relative rounded-lg overflow-hidden h-80 lg:h-96 w-80 max-w-lg"> <img${addAttribute(recipe.product_image, "src")}${addAttribute(recipe.title, "alt")} class="w-full h-full object-cover" onerror="this.onerror=null;this.src='/images/recipes/placeholder.jpg';"> </div> </div>`} <div class="w-[80%] md:w-1/2 flex flex-col gap-4 md:p-8 p-4 rounded-lg text-white"> <section class="mb-8 text-white"> <ul class="list-disc list-inside space-y-2 text-white"> ${recipe.ingredients.map((ingredient) => renderTemplate`<li class="text-white"> ${ingredient} </li>`)} </ul> </section> </div> </div> </div> </div> <div id="instructions" class="mt-[-2rem]  md:mt-[-2rem] flex flex-col md:flex-row justify-center items-center md:h-[43rem] mb-8"> <div class="w-full max-w-6xl flex flex-col md:flex-row items-center justify-center gap-8"> <div class="w-[80%]  flex items-center justify-center flex-col gap-4  md:p-0 p-4 rounded-lg text-white"> <h1 class="font-heading font-bold md:text-4xl text-2xl text-gray-600 text-center mb-8"> ${recipesAssets.preparation} </h1> <section class="mb-8 text-white"> <ul class="list-disc list-inside space-y-2 text-gray-600"> ${recipe.instructions.map((instruction) => renderTemplate`<li class="text-gray-600"> ${instruction} </li>`)} </ul> </section> </div> </div> </div> <div id="suggestions_related" class="mt-[-2rem] flex flex-col justify-center items-center py-12 bg-white"${addAttribute(renderTransition($$result, "uzftmpxg", "fade", ""), "data-astro-transition-scope")}> <div class="w-full max-w-6xl px-4"> <h2 class="pb-8 text-3xl md:text-4xl font-bold text-gray-600 mb-8 text-center font-heading"> ${recipesAssets.related_recipes} </h2> <div class="w-full mx-auto grid grid-cols-2 md:grid-cols-3 gap-6 md:gap-16"> ${relatedRecipes.map((related) => renderTemplate`${renderComponent($$result, "RecipeCard", $$RecipeCard, { "image": related.image || "/images/recipes/placeholder.jpg", "title": related.title, "time": `${related.preparation_time} ${currentLang === "es" ? "min" : "mins"}`, "id": related.id, "textColor": "text-gray-800", "iconColor": "text-gray-500" })}`)} </div> </div> </div> ${renderScript($$result, "/Users/josedeleon/Proyectos/Snacksyummies_astro/src/views/Recipes/Detail/index.astro?astro&type=script&index=0&lang.ts")}`;
}, "/Users/josedeleon/Proyectos/Snacksyummies_astro/src/views/Recipes/Detail/index.astro", "self");

export { $$RecipeCard as $, $$Index as a };
