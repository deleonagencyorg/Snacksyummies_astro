---
// src/pages/[lang]/noticias/[newsId].astro
import { t, setLocale, getLocale, type Locale } from '../../../i18n/i18n';
import MainLayout from '../../../layouts/MainLayout.astro';

export async function getStaticPaths() {
  const paths: Array<{
    params: { lang: string; newsId: string };
    props: { newsItem: any; locale: Locale };
  }> = [];
  // Obtener las noticias en español
  const esNews = t('items', { namespace: 'news', locale: 'es' });
  // Obtener las noticias en inglés
  const enNews = t('items', { namespace: 'news', locale: 'en' });
  
  // Generar rutas para las noticias en español
  esNews.forEach((newsItem: any) => {
    paths.push({
      params: { lang: 'es', newsId: newsItem.id },
      props: { newsItem, locale: 'es' }
    });
  });
  
  // Generar rutas para las noticias en inglés
  enNews.forEach((newsItem: any) => {
    paths.push({
      params: { lang: 'en', newsId: newsItem.id },
      props: { newsItem, locale: 'en' }
    });
  });
  
  return paths;
}

const { newsItem, locale } = Astro.props;
const { lang, newsId } = Astro.params as { lang: Locale; newsId: string };

// Establecer el idioma actual
setLocale(lang);

// Función para formatear fechas según el idioma
function formatDate(dateString: string, locale: Locale) {
  const date = new Date(dateString);
  const options: Intl.DateTimeFormatOptions = { year: 'numeric', month: 'long', day: 'numeric' };
  return date.toLocaleDateString(locale === 'es' ? 'es-ES' : 'en-US', options);
}

// Obtener otras noticias para la sección de "Noticias relacionadas"
const allNews = t('items', { namespace: 'news' });
const relatedNews = allNews
  .filter((n: any) => n.id !== newsItem.id)
  .filter((n: any) => {
    // Encontrar noticias con al menos una etiqueta en común
    const commonTags = n.tags?.filter((tag: string) => newsItem.tags?.includes(tag));
    return commonTags && commonTags.length > 0;
  })
  .slice(0, 3); // Limitar a 3 noticias relacionadas

const pageTitle = newsItem.title;
const pageDescription = newsItem.summary;
---

<MainLayout title={pageTitle} description={pageDescription}>
  <div class="bg-white py-12">
    <div class="container mx-auto px-4">
      <!-- Navegación de migas de pan -->
      <div class="mb-6">
        <a href={`/${lang}/`} class="text-gray-500 hover:text-yellow-600">{t('welcome', { namespace: 'common' })}</a>
        <span class="mx-2 text-gray-400">/</span>
        <a href={`/${lang}/noticias`} class="text-gray-500 hover:text-yellow-600">{t('page.title', { namespace: 'news' })}</a>
        <span class="mx-2 text-gray-400">/</span>
        <span class="text-gray-900">{newsItem.title}</span>
      </div>
      
      <!-- Contenido principal de la noticia -->
      <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
        <!-- Contenido de la noticia -->
        <div class="lg:col-span-2">
          <h1 class="text-4xl font-bold mb-4">{newsItem.title}</h1>
          
          <div class="flex items-center text-gray-500 mb-6">
            <span>{formatDate(newsItem.published_date, lang)}</span>
            <span class="mx-2">•</span>
            <span>{newsItem.author}</span>
          </div>
          
          <div class="relative rounded-lg overflow-hidden mb-8 h-80 lg:h-96">
            <img 
              src={newsItem.image || '/images/news/placeholder.jpg'} 
              alt={newsItem.title} 
              class="w-full h-full object-cover"
              onerror="this.src='/images/news/placeholder.jpg'"
            />
          </div>
          
          <div class="prose prose-lg max-w-none mb-8" set:html={newsItem.content} />
          
          <!-- Etiquetas -->
          {newsItem.tags && newsItem.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 mb-8">
              {newsItem.tags.map((tag: string) => (
                <span class="bg-gray-100 text-gray-800 px-3 py-1 rounded-full text-sm">{tag}</span>
              ))}
            </div>
          )}
          
          <!-- Compartir -->
          <div class="border-t border-gray-200 pt-6 mt-8">
            <h3 class="text-lg font-semibold mb-3">{t('detail.share', { namespace: 'news' })}</h3>
            <div class="flex space-x-4">
              <a 
                href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(Astro.url.href)}`} 
                target="_blank" 
                rel="noopener noreferrer"
                class="text-blue-600 hover:text-blue-800"
              >
                Facebook
              </a>
              <a 
                href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(Astro.url.href)}&text=${encodeURIComponent(newsItem.title)}`} 
                target="_blank" 
                rel="noopener noreferrer"
                class="text-blue-400 hover:text-blue-600"
              >
                Twitter
              </a>
              <a 
                href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(Astro.url.href)}&title=${encodeURIComponent(newsItem.title)}`} 
                target="_blank" 
                rel="noopener noreferrer"
                class="text-blue-800 hover:text-blue-900"
              >
                LinkedIn
              </a>
            </div>
          </div>
          
          <!-- Botón para volver -->
          <div class="mt-8">
            <a 
              href={`/${lang}/noticias`} 
              class="inline-flex items-center text-yellow-600 hover:text-yellow-800"
            >
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M9.707 14.707a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 1.414L7.414 9H15a1 1 0 110 2H7.414l2.293 2.293a1 1 0 010 1.414z" clip-rule="evenodd" />
              </svg>
              {t('detail.back', { namespace: 'news' })}
            </a>
          </div>
        </div>
        
        <!-- Barra lateral con noticias relacionadas -->
        <div class="lg:col-span-1">
          <!-- Noticias relacionadas -->
          {relatedNews.length > 0 && (
            <div class="bg-gray-50 p-6 rounded-lg">
              <h2 class="text-2xl font-bold mb-4">{t('detail.related_news', { namespace: 'news' })}</h2>
              <div class="space-y-6">
                {relatedNews.map((related: any) => (
                  <a href={`/${lang}/noticias/${related.id}`} class="block group">
                    <div class="flex flex-col">
                      <div class="w-full h-40 rounded-md overflow-hidden mb-3">
                        <img 
                          src={related.image || '/images/news/placeholder.jpg'} 
                          alt={related.title} 
                          class="w-full h-full object-cover"
                          onerror="this.src='/images/news/placeholder.jpg'"
                        />
                      </div>
                      <div>
                        <h3 class="font-medium text-gray-900 group-hover:text-yellow-600 transition-colors mb-1">{related.title}</h3>
                        <p class="text-sm text-gray-500 line-clamp-2">{related.summary}</p>
                        <div class="text-xs text-gray-400 mt-2">{formatDate(related.published_date, lang)}</div>
                      </div>
                    </div>
                  </a>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<script>
  // Fix para las imágenes que no cargan
  document.addEventListener('DOMContentLoaded', () => {
    // Ya no es necesario este código porque usamos el atributo onerror en las imágenes
  });
</script>
