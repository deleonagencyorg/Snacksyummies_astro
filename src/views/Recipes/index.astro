---
// src/components/pages/RecipesPage.astro
import { t } from '../../i18n/i18n';
import type { Locale } from '../../i18n/i18n';
import { getLocale } from '../../i18n/i18n';
import './styles.css';
import RecipeCard from '../../components/recipes/RecipeCard.astro';
import Categories from '../../components/recipes/Categories.astro';
import RecipeMonth from '../../components/recipes/RecipeMonth.astro';
import LazyImage from '../../components/common/LazyImage.astro';
import Breadcrumb from '../../components/common/Breadcrumb/Breadcrumb.astro';
import banner from '../../assets/Banner recetas animado.png';
import group from '../../assets/Group 40.png';
interface Recipe {
  id: string;
  title: string;
  image?: string;
  preparation_time: number;
  type?: string;
  brand?: string;
  servings?: number;
  difficulty?: string;
  slug?: string;
}

const currentLang = getLocale();

// Pass current language to client-side script
const clientLang = currentLang;

// Get all recipe files with correct Vite glob typing
const recipeModules = import.meta.glob<{default: Recipe}>('../../locales/*/recipes/*.json');
const allRecipes: Recipe[] = [];

// Process each file
for (const path in recipeModules) {
  const lang = path.split('/')[3]; // Extract language from path
  if (lang === currentLang) {
    const module = await recipeModules[path]();
    allRecipes.push(module.default);
  }
}

// Compute featured recipe (always the first from full list)
const featured = allRecipes[0];
const featuredTitle = featured?.title ?? '';
const featuredTime = featured ? `${featured.preparation_time}MIN` : '';
const featuredImage = featured?.image || 'https://snack.yummiespromociones.com/SnacksyummiesAssets/placeholder.webp';
const featuredId = featured?.id ?? '';
const featuredServings = (featured as any)?.servings ?? 0;
const featuredDifficulty = (featured as any)?.difficulty ?? '---';
const featuredSlug = featured?.slug ?? '';

---
<div id="hero" class="relative w-full aspect-[4/3] md:h-[32rem] overflow-hidden bg-cover bg-top" style="background-image: url('https://snack.yummiespromociones.com/SnacksyummiesAssets/banerrecipes.jpg');" transition:animate="fade">
  <div class="w-full md:w-[90%] mx-auto px-4 h-full">
    <div class="flex flex-col lg:flex-row items-center justify-center gap-6 h-full">
      <div id="textshero" class="w-full lg:w-1/2 flex justify-center md:justify-start text-center md:text-left">
        <div class="w-full">
          <h1 class="text-[#FDC300] font-sans text-4xl md:text-6xl lg:text-6xl font-bold  text-center w-full mt-12 leading-[5px] md:leading-[10px] lg:leading-[30px]">{currentLang === 'es' ? 'Le damos' : 'Give'}</h1> 
          <h1 class="text-white font-title text-6xl  md:text-8xl lg:text-9xl font-bold  text-center w-full mt-12 leading-[5px] md:leading-[10px] lg:leading-[30px]">{currentLang === 'es' ? 'SABOR' : 'Flavor'}</h1> 
          <h1 class="text-[#FDC300] font-sans text-4xl md:text-6xl lg:text-6xl font-bold  text-center w-full mt-12 leading-[5px] md:leading-[10px] lg:leading-[30px]">{currentLang === 'es' ? 'A LA VIDA' : 'To Life'}</h1> 
        </div>
      </div>
      <div class="w-full lg:w-1/2 flex justify-center">
        <LazyImage
          src={group.src}
          alt="Group overlay"
          class="w-full h-auto"
        />
      </div>
    </div>
  </div>
</div>

<!-- Breadcrumbs -->


<div class="-mt-10 pt-12 pb-16 overflow-hidden" style="background-image: url('https://snack.yummiespromociones.com/SnacksyummiesAssets/bgrecipes2.webp'); background-position: top center;">

  <div class="container mx-auto px-4 mt-12 bg-transparent">
    <Breadcrumb 
  items={[
    { label: 'Home', href: `/${currentLang}` },
    { label: currentLang === 'es' ? 'Recetas' : 'Recipes', href: `/${currentLang}/${currentLang === 'es' ? 'recetas' : 'recipes'}` },
  ]}
  textColor="text-white "
 
/>

<!-- Categories Section (reusable slider) -->
<Categories />

<!-- Recipe of the Month -->
<div class="w-full max-w-5xl px-5 mx-auto bg-white rounded-3xl ">
  <RecipeMonth transparent={true} recipeTitle={featuredTitle} time={featuredTime} image={featuredImage} id={featuredId} slug={featuredSlug} servings={featuredServings} level={featuredDifficulty} />
  </div>

    {allRecipes.length === 0 ? (
      <p class="text-center text-white">{t('page.no_recipes', { namespace: 'recipes' })}</p>
    ) : (
      <div class="max-w-[1028px] mx-auto flex flex-col gap-14 items-center ">
        <!-- Title -->
        {(() => {
          const allTitle = currentLang === 'es' ? 'Todas las recetas' : 'All recipes';
          return (
            <h2 class="text-white font-title text-[40px] font-bold leading-[40px] text-center w-full mt-12">
              {allTitle}
            </h2>
          );
        })()}
        
        <!-- Recipe Grid -->
        {(() => {
          const itemsPerPage = 6; // Mostrar 6 recetas inicialmente
          const totalRecipes = allRecipes.length;

          return (
            <div>
              <div class="w-full">
                <div id="recipes-grid" data-items-per-page={itemsPerPage} data-total-recipes={totalRecipes} data-loaded-count={Math.min(itemsPerPage, totalRecipes)} class="grid grid-cols-2 md:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-10 place-items-center">
                  {allRecipes.map((recipe: any, index: number) => {
                    const isVisible = index < itemsPerPage;
                    const brandAttr = Array.isArray(recipe.brand) ? recipe.brand.join(',') : (recipe.brand || 'unknown');
                    return (
                      <div 
                        data-recipe-index={index} 
                        data-brand={brandAttr}
                        class={`recipe-item ${isVisible ? 'block' : 'hidden'}`}
                      >
                        <RecipeCard
                          image={recipe.image || 'https://snack.yummiespromociones.com/SnacksyummiesAssets/placeholder.webp'}
                          title={recipe.title}
                          time={`${recipe.preparation_time}MIN`}
                          id={recipe.id}
                          slug={recipe.slug}
                          textColor="text-gray-800"
                          iconColor="text-gray-800"
                        />
                      </div>
                    );
                  })}
                </div>
              </div>

              {/* Load More Button */}
              <div class="flex justify-center mt-8">
                <button 
                  id="load-more-btn" 
                  class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-bold py-3 px-8 rounded-full transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                  style={totalRecipes <= itemsPerPage ? 'display: none;' : ''}
                >
                  <span id="load-more-text">{t('page.load_more', { namespace: 'recipes' })}</span>
                  <span id="loading-text" class="hidden">{t('page.loading', { namespace: 'recipes' })}</span>
                </button>
                
                <div id="no-more-recipes" class="hidden text-gray-600 font-medium py-3">
                  {t('page.no_more_recipes', { namespace: 'recipes' })}
                </div>
              </div>
            </div>
          );
        })()}
      </div>
    )}
  </div>
</div>

<style>
  /* Slide the group image from right into a right-aligned position and keep it above the banner */
  .group-image {
    position: absolute;
    right: 6%;              /* aligned to the right side of the hero */
    top: 50%;
    z-index: 10;
    width: 48.50475rem;     /* requested width */
    height: 14.00113rem;    /* requested height */
    flex-shrink: 0;
    object-fit: contain;
    transform: translate(100%, -50%); /* start off to the right */
    opacity: 0;
    animation: slideInToRight 800ms ease-out forwards;
    pointer-events: none;
  }

  @keyframes slideInToRight {
    from {
      transform: translate(100%, -50%);
      opacity: 0;
    }
    to {
      transform: translate(0, -50%); /* right-aligned position */
      opacity: 1;
    }
  }

  /* Responsive tweak: make overlay smaller on small screens */
  @media (max-width: 768px) {
    .group-image {
      width: 65%;
      height: auto;
      right: 4%;
      animation-duration: 700ms;
    }
  }

  /* Fallback for very small screens */
  @media (max-width: 500px) {
    .group-image {
      width: 55%;
    }
  }
</style>

<script>
  import { initRecipesFilter } from '../../scripts/recipesFilter';

  // Inicializar en carga y navegaciones
  function init() {
    initRecipesFilter();
  }

  // Ejecutar en diferentes eventos del ciclo de vida
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', init);
  } else {
    init();
  }
  
  window.addEventListener('astro:page-load', init);
  window.addEventListener('astro:after-swap', init);
</script>
