---
import { Swiper } from 'swiper';
import { Navigation, Pagination, Autoplay } from 'swiper/modules';
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import CarouselSlide from '../CarouselSlide.astro';
import Skeleton from './Skeleton.astro';
import './styles.css';

export interface Props {
  slides: Array<{
    desktop: string;
    mobile: string;
    alt: string;
    title: string;
    subtitle: string;
    link?: string;
  }>;
  loading?: boolean;
}

const { slides = [], loading = false } = Astro.props;

// Log de depuración
console.log('Carousel Props:', {
  slides: slides,
  loading: loading,
  slidesCount: slides.length
});

// Identificar la primera imagen para cargarla con prioridad
const firstSlide = slides[0] || {};

// Log del primer slide
if (firstSlide.desktop) {
  console.log('First Slide:', firstSlide);
} else {
  console.warn('No slides available or first slide is incomplete');
}

// Opcional: Precargar la primera imagen para mejorar el LCP
const preloadFirstImage = true && firstSlide.mobile && firstSlide.desktop;

---

{loading ? (
  <Skeleton items={3} />
) : (
  <div class="relative overflow-hidden h-[300px] md:h-[90vh] min-h-[300px]">
    {preloadFirstImage && (
      <>
        <!-- Precargar la primera imagen para dispositivos móviles -->
        <link rel="preload" href={firstSlide.mobile} as="image" media="(max-width: 767px)">
        <!-- Precargar la primera imagen para escritorio -->
        <link rel="preload" href={firstSlide.desktop} as="image" media="(min-width: 768px)">
      </>
    )}
    
    <!-- Swiper container -->
    <div class="swiper-container main-carousel h-full">
      <div class="swiper-wrapper">
        {slides.map((slide, index) => (
          <CarouselSlide 
            slide={{
              desktop: slide.desktop,
              mobile: slide.mobile,
              alt: slide.alt,
              title: slide.title,
              subtitle: slide.subtitle,
              link: slide.link
            }}
            priority={index === 0}
            key={`slide-${index}`}
          />
        ))}
      </div>
      
      <!-- Navegación -->
      <div class="swiper-button-next text-white"></div>
      <div class="swiper-button-prev text-white"></div>
      
      <!-- Paginación -->
      <div class="swiper-pagination"></div>
    </div>
  </div>
)}

<style is:global>
  .swiper-container {
    width: 100%;
    height: 100%;
  }
  .swiper-slide {
    width: 100%;
    height: 100%;
  }
  .swiper-button-next, .swiper-button-prev {
    color: white;
  }
  .swiper-pagination-bullet-active {
    background: white;
  }
</style>

<script is:inline>
  document.addEventListener('DOMContentLoaded', () => {
    const swiper = new Swiper('.swiper-container.main-carousel', {
      modules: [Navigation, Pagination, Autoplay],
      loop: true,
      autoplay: {
        delay: 5000,
        disableOnInteraction: false,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      on: {
        init: function() {
          console.log('Swiper initialized successfully');
        },
        error: function(e) {
          console.error('Swiper error:', e);
        }
      }
    });
    
    // Forzar update después de carga de imágenes
    setTimeout(() => swiper.update(), 1000);
  });
  
  // Verificar que Swiper esté cargado
  if(typeof Swiper === 'undefined') {
    console.error('Swiper no está cargado correctamente');
  } else {
    console.log('Swiper está disponible:', Swiper.version);
  }
</script>
