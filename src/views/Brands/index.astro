---
// src/views/Brands/index.astro
import LazyImage from '../../components/common/LazyImage.astro';
import { t } from '../../i18n/i18n';
import type { Locale } from '../../i18n/i18n';
import { getLocale } from '../../i18n/i18n';
import './styles.css';

const currentLang = getLocale();
console.log('Brands view - Current language:', currentLang);

// Intentar cargar datos con manejo de errores
let brandsData = [];
let pageTitle = '';
let pageDescription = '';
let homeAssets:any = [];

try {
  console.log('Intentando cargar datos de marcas desde namespace:', 'brands');
  
  // Cargar datos de marcas
  brandsData = t('brands', { namespace: 'brands', locale: currentLang }) || [];
  console.log('Datos de marcas cargados:', brandsData ? 'Éxito' : 'Fallo');
  console.log('Número de marcas cargadas:', Array.isArray(brandsData) ? brandsData.length : 'No es un array');
  homeAssets = t('home', { namespace: 'brands', locale: currentLang }) || [];
  // Cargar título y descripción
  pageTitle = t('home.title', { namespace: 'brands' }) || 'Marcas';
  pageDescription = t('home.description', { namespace: 'brands' }) || 'Nuestras marcas';
  
  console.log('Título de la página:', pageTitle);
} catch (error) {
  console.error('Error al cargar datos de marcas:', error);
  brandsData = [];
  pageTitle = currentLang === 'es' ? 'Marcas' : 'Brands';
  pageDescription = currentLang === 'es' ? 'Nuestras marcas' : 'Our brands';
}
---

<div class="brands-container">
<header class="brands-header text-center py-8">
    <h1 class="text-8xl font-bold mb-4 font-title text-white">{pageTitle}</h1>
    
    <div class="brands-carousel-container relative w-full my-8">
      <!-- Botones de navegación -->
      <button class="carousel-nav carousel-prev absolute left-0 top-1/2 transform -translate-y-1/2 z-10 bg-white/80 rounded-full p-2 shadow-md">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7" />
        </svg>
      </button>
      
      <div class="brands-icons-carousel overflow-x-auto hide-scrollbar">
        <div class="brands-icons-row flex items-center gap-4 py-4">
          {brandsData.map((brand: any) => (
            <a 
              href={`#${brand.slug}`} 
              class="brand-icon-circle flex-shrink-0" 
              style={`background-color: ${brand.bgColor || '#ffffff'}`}
              aria-label={`Ir a ${brand.title}`}
            >
              <LazyImage
                src={brand.logo} 
                alt={brand.title} 
                class="w-16 md:w-32 h-16 md:h-32 object-contain"
              />
            </a>
          ))}
        </div>
      </div>
      
      <button class="carousel-nav carousel-next absolute right-0 top-1/2 transform -translate-y-1/2 z-10 bg-white/80 rounded-full p-2 shadow-md">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
        </svg>
      </button>
    </div>
  </header>
</div>

  <div class="container mx-auto px-4 mt-[-2rem]">
    <div class="brands-list">
      {brandsData.map((brand: any, index: number) => (
        <div id={brand.slug} class="brand-card relative flex items-center mt-[-2rem]">
          <div class="brand-card-bg" style={`background-color: ${brand.bgColor || '#ffffff'}`}></div>
          {/* Mobile chip images positioned at brand card corners */}
          {brand.imageChip1 && (
            <div class="chip-image chip-top-left chip-mobile">
              <LazyImage
                src={brand.imageChip1}
                alt="Chip"
                class="w-24 h-24 object-contain"
              />
            </div>
          )}
          {brand.imageChip2 && (
            <div class="chip-image chip-top-right chip-mobile">
              <LazyImage
                src={brand.imageChip2}
                alt="Chip"
                class="w-24 h-24 object-contain"
              />
            </div>
          )}
          {brand.imageChip3 && (
            <div class="chip-image chip-bottom-left chip-mobile">
              <LazyImage
                src={brand.imageChip3}
                alt="Chip"
                class="w-16 h-16 object-contain"
              />
            </div>
          )}
          {brand.imageChip4 && (
            <div class="chip-image chip-bottom-right chip-mobile">
              <LazyImage
                src={brand.imageChip4}
                alt="Chip"
                class="w-16 h-16 object-contain"
              />
            </div>
          )}
          
          <div class="container mx-auto px-4 py-8 relative">
            <div class="flex flex-col md:flex-row items-center justify-between">
              <div class="md:w-1/2 order-2 md:order-1 flex items-center justify-center">
                <div class="brand-logo-container relative">
                  {/* Desktop chip images positioned around the logo */}
                  {brand.imageChip1 && (
                    <div class="chip-image chip-top-left chip-desktop">
                      <LazyImage
                        src={brand.imageChip1}
                        alt="Chip"
                        class="w-24 h-24 mx-6 my-2 object-contain"
                      />
                    </div>
                  )}
                  {brand.imageChip2 && (
                    <div class="chip-image chip-top-right chip-desktop">
                      <LazyImage
                        src={brand.imageChip2}
                        alt="Chip"
                        class="w-24 h-24 mx-6 my-2 object-contain"
                      />
                    </div>
                  )}
                  {brand.imageChip3 && (
                    <div class="chip-image chip-bottom-left chip-desktop">
                      <LazyImage
                        src={brand.imageChip3}
                        alt="Chip"
                        class="w-24 h-24 mx-6 my-2 object-contain"
                      />
                    </div>
                  )}
                  {brand.imageChip4 && (
                    <div class="chip-image chip-bottom-right chip-desktop">
                      <LazyImage
                        src={brand.imageChip4}
                        alt="Chip"
                        class="w-24 h-24 mx-6 my-2 object-contain"
                      />
                    </div>
                  )}
                  
                  
                  <div id="brand-logo"class="flex flex-col items-center z-10 relative">
                    <LazyImage
                      src={brand.logo}
                      alt={brand.title}
                      transition:name={`brand-image-${brand.id}`}
                    />
                    {!brand.url || brand.url === '#' ? null : (
                      <a 
                        href={brand.url}
                        class="inline-block bg-white border border-primary text-primary hover:bg-primary hover:text-white py-2 px-6 rounded-full transition-colors duration-300 mt-6"
                      >
                        {homeAssets.textButton}
                      </a>
                    )}
                  </div>
                </div>
              </div>
              <div class="md:w-1/2 order-1 md:order-2 mb-6 md:mb-0 flex items-center justify-center product-preview-container">
                <div class="products-carousel" id={`products-carousel-${brand.id}`}>
                  <div class="products-carousel-inner">
                    {brand.products && brand.products.length > 0 ? (
                      brand.products.map((product: any, productIndex: number) => (
                        <div class="product-slide" id={`${brand.id}-product-${productIndex}`} data-valid="true">
                          <LazyImage 
                          id={`product-${brand.id}-${productIndex}`}
                            src={product.image} 
                            alt={product.title} 
                            class="product-preview-image"
                            onload="this.parentNode.dataset.loaded = 'true'"
                            onerror="this.parentNode.dataset.valid = 'false'; this.parentNode.style.display = 'none';"
                          />
                        </div>
                      ))
                    ) : (
                      <div class="product-slide" data-valid="true">
                        <LazyImage 
                          src={brand.imageProductPreview || brand.image} 
                          alt={brand.title} 
                          class="product-preview-image"
                          transition:name={`brand-image-${brand.id}`}
                        />
                      </div>
                    )}
                  </div>
                  {brand.products && brand.products.length > 1 && (
                    <div class="products-carousel-nav">
                      <button class="prev-product" aria-label="Producto anterior">&lt;</button>
                      <button class="next-product" aria-label="Siguiente producto">&gt;</button>
                    </div>
                  )}
                </div>
              </div>
            </div>
          </div>
          
          <!-- Decorative elements like triangles and chips based on the reference image -->
          
          
        </div>
      ))}
    </div> 
  </div>
</div>

<script src="./scripts.js"></script>
